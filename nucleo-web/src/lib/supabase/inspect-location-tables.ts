import { createClient } from './client'

export async function inspectLocationTables() {
  const supabase = createClient()
  if (!supabase) {
    console.error('‚ùå Supabase client not initialized')
    return
  }

  console.log('üîç Inspecting location tables...')

  try {
    // Inspect provincias table
    console.log('\nüìã PROVINCIAS TABLE:')
    const { data: provinciasData, error: provinciasError } = await supabase
      .from('provincias')
      .select('*')
      .limit(5)

    if (provinciasError) {
      console.error('‚ùå Provincias table error:', provinciasError.message)
    } else {
      console.log('‚úÖ Provincias table accessible')
      if (provinciasData && provinciasData.length > 0) {
        console.log('üìã Provincias table columns:', Object.keys(provinciasData[0]))
        console.log('üìä Sample provincias data:', provinciasData)
      } else {
        console.log('üìã Provincias table is empty')
      }
    }

    // Inspect cantones table
    console.log('\nüìã CANTONES TABLE:')
    const { data: cantonesData, error: cantonesError } = await supabase
      .from('cantones')
      .select('*')
      .limit(5)

    if (cantonesError) {
      console.error('‚ùå Cantones table error:', cantonesError.message)
    } else {
      console.log('‚úÖ Cantones table accessible')
      if (cantonesData && cantonesData.length > 0) {
        console.log('üìã Cantones table columns:', Object.keys(cantonesData[0]))
        console.log('üìä Sample cantones data:', cantonesData)
      } else {
        console.log('üìã Cantones table is empty')
      }
    }

    // Inspect distritos table
    console.log('\nüìã DISTRITOS TABLE:')
    const { data: distritosData, error: distritosError } = await supabase
      .from('distritos')
      .select('*')
      .limit(5)

    if (distritosError) {
      console.error('‚ùå Distritos table error:', distritosError.message)
    } else {
      console.log('‚úÖ Distritos table accessible')
      if (distritosData && distritosData.length > 0) {
        console.log('üìã Distritos table columns:', Object.keys(distritosData[0]))
        console.log('üìä Sample distritos data:', distritosData)
      } else {
        console.log('üìã Distritos table is empty')
      }
    }

    // Test relationships
    console.log('\nüîó TESTING RELATIONSHIPS:')
    
    // Get cantones for a specific provincia
    const { data: cantonesForProvincia, error: cantonesForProvinciaError } = await supabase
      .from('cantones')
      .select('*')
      .eq('provincia', 'San Jos√©')
      .limit(3)

    if (cantonesForProvinciaError) {
      console.error('‚ùå Error getting cantones for San Jos√©:', cantonesForProvinciaError.message)
    } else {
      console.log('‚úÖ Cantones for San Jos√©:', cantonesForProvincia)
    }

    // Get distritos for a specific canton
    const { data: distritosForCanton, error: distritosForCantonError } = await supabase
      .from('distritos')
      .select('*')
      .eq('canton', 'San Jos√©')
      .limit(3)

    if (distritosForCantonError) {
      console.error('‚ùå Error getting distritos for San Jos√© canton:', distritosForCantonError.message)
    } else {
      console.log('‚úÖ Distritos for San Jos√© canton:', distritosForCanton)
    }

  } catch (error) {
    console.error('‚ùå Error inspecting location tables:', error)
  }
}
